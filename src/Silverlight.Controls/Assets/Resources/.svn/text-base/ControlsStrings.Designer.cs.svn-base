//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Silverlight.Controls.Assets.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ControlsStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ControlsStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Silverlight.Controls.Assets.Resources.ControlsStrings", typeof(ControlsStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SelectedDates collection can be changed only in a multiple selection mode. Use the SelectedDate in a single selection mode..
        /// </summary>
        public static string Calendar_CheckSelectionMode_InvalidOperation {
            get {
                return ResourceManager.GetString("Calendar_CheckSelectionMode_InvalidOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to next button.
        /// </summary>
        public static string Calendar_NextButtonName {
            get {
                return ResourceManager.GetString("Calendar_NextButtonName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DisplayMode value is not valid..
        /// </summary>
        public static string Calendar_OnDisplayModePropertyChanged_InvalidValue {
            get {
                return ResourceManager.GetString("Calendar_OnDisplayModePropertyChanged_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FirstDayOfWeek value is not valid..
        /// </summary>
        public static string Calendar_OnFirstDayOfWeekChanged_InvalidValue {
            get {
                return ResourceManager.GetString("Calendar_OnFirstDayOfWeekChanged_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SelectedDate property cannot be set when the selection mode is None..
        /// </summary>
        public static string Calendar_OnSelectedDateChanged_InvalidOperation {
            get {
                return ResourceManager.GetString("Calendar_OnSelectedDateChanged_InvalidOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SelectedDate value is not valid..
        /// </summary>
        public static string Calendar_OnSelectedDateChanged_InvalidValue {
            get {
                return ResourceManager.GetString("Calendar_OnSelectedDateChanged_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SelectionMode value is not valid..
        /// </summary>
        public static string Calendar_OnSelectionModeChanged_InvalidValue {
            get {
                return ResourceManager.GetString("Calendar_OnSelectionModeChanged_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to previous button.
        /// </summary>
        public static string Calendar_PreviousButtonName {
            get {
                return ResourceManager.GetString("Calendar_PreviousButtonName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value is not valid..
        /// </summary>
        public static string Calendar_UnSelectableDates {
            get {
                return ResourceManager.GetString("Calendar_UnSelectableDates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This type of Collection does not support changes to its SourceCollection from a thread different from the Dispatcher thread..
        /// </summary>
        public static string CalendarCollection_MultiThreadedCollectionChangeNotSupported {
            get {
                return ResourceManager.GetString("CalendarCollection_MultiThreadedCollectionChangeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DateFormatInfo cannot be null..
        /// </summary>
        public static string CalendarInfo_DateFormatInfoRequired {
            get {
                return ResourceManager.GetString("CalendarInfo_DateFormatInfoRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Calendar.
        /// </summary>
        public static string DatePicker_DropDownButtonName {
            get {
                return ResourceManager.GetString("DatePicker_DropDownButtonName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DatePickerFormat value is not valid..
        /// </summary>
        public static string DatePicker_OnSelectedDateFormatChanged_InvalidValue {
            get {
                return ResourceManager.GetString("DatePicker_OnSelectedDateFormatChanged_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;{0}&gt;.
        /// </summary>
        public static string DatePicker_WatermarkText {
            get {
                return ResourceManager.GetString("DatePicker_WatermarkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot Throw Null Exception.
        /// </summary>
        public static string DatePickerDateValidationErrorEventArgs_ThrowException_NoException {
            get {
                return ResourceManager.GetString("DatePickerDateValidationErrorEventArgs_ThrowException_NoException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;enter text here&gt;.
        /// </summary>
        public static string DatePickerTextBox_DefaultWatermarkText {
            get {
                return ResourceManager.GetString("DatePickerTextBox_DefaultWatermarkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The template part {0} is not an instance of {1}..
        /// </summary>
        public static string DatePickerTextBox_TemplatePartIsOfIncorrectType {
            get {
                return ResourceManager.GetString("DatePickerTextBox_TemplatePartIsOfIncorrectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DateTime value is in the wrong format..
        /// </summary>
        public static string DateTimeTypeConverter_FormatException {
            get {
                return ResourceManager.GetString("DateTimeTypeConverter_FormatException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DateTime value is in the wrong format..
        /// </summary>
        public static string DateTimeTypeConverter_FormatException1 {
            get {
                return ResourceManager.GetString("DateTimeTypeConverter_FormatException1", resourceCulture);
            }
        }
    }
}
